{"leetcode":{"easy":6,"hard":0,"medium":4,"shas":{"0131-palindrome-partitioning":{"0131-palindrome-partitioning.java":"18069101e6b6c8a4e6fd09d4760371ade912fd9e","README.md":"8d1193b850186046367e6f61e71d735ecfe81acf"},"1878-check-if-array-is-sorted-and-rotated":{"1878-check-if-array-is-sorted-and-rotated.java":"223f9efc139998642abf00c3425a88aa25fb9243","README.md":"71e06a7e29eca92e38c35bb3ce1040fa5e0ef7d2","difficulty":"easy"},"README.md":{"":"36d370ffa2951fc8946245f3bddae318fdf2b296"},"0100-same-tree":{"0100-same-tree.java":"0a0b6faa70eeb8ba21415792cc451be4d1181fb8","README.md":"e68046f2dc906bcd38453dd92eec5c257d4694a9","difficulty":"easy"},"0144-binary-tree-preorder-traversal":{"0144-binary-tree-preorder-traversal.java":"c8de377a17e8bfea240a7ee5fd6a2018c5cda0c4","README.md":"2a9e1c4d5b165cf7667739cb5cd3e9fde9b49315","difficulty":"easy"},"stats.json":{"":"06882a9f302988fd0ef4ae458c75d0c6e872ef44"},"0145-binary-tree-postorder-traversal":{"0145-binary-tree-postorder-traversal.java":"fcfe127d99fdd8a00f8e7dd91178e1a580560830","README.md":"ac6ce4de8f4a2a59c2b312532094616b3d3c85b7","difficulty":"easy"},"0049-group-anagrams":{"0049-group-anagrams.java":"28b62bae8260f7bdfcd4be8d1e7bc20ee261610e","README.md":"9d4e57a1660ecf3ab6088a2b5784c68ccf5ddbcf","difficulty":"medium"},"0036-valid-sudoku":{"0036-valid-sudoku.java":"e6906c97ba930d4fe970aac41c01873a57b5edb5","README.md":"9281b318fda64bb0a24c76ff5049dc73f8c01de9","difficulty":"medium"},"0128-longest-consecutive-sequence":{"0128-longest-consecutive-sequence.java":"fbf98adc08f01f208a5ed861d5e9c95eaf8b0a98","README.md":"bc9f29c64becd6a215a5f4d2dfc5724230985721","difficulty":"medium"},"0020-valid-parentheses":{"0020-valid-parentheses.java":"9cf954252d44431d35947d08841cb2cd8017bcb7","README.md":"cd6320f8cb09fba0fb72aa44268e4aa33fff7cf9","difficulty":"easy"},"0268-missing-number":{"0268-missing-number.java":"e8b5d716a1d0685ed31b9acf5d34020b771b97e4","README.md":"9910f8217471fa2e735e371c3915f20715734ac2","difficulty":"easy"},"0925-construct-binary-tree-from-preorder-and-postorder-traversal":{"0925-construct-binary-tree-from-preorder-and-postorder-traversal.java":"474feacb01a2d87edfcb4a803c5f17e104e349ab","README.md":"be31bf390a70467103dd25c4054df5dcb6e1bfb3","difficulty":"medium"}},"solved":10}}